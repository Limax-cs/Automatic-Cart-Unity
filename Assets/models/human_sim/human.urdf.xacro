<?xml version="1.0"?>
<robot name="human" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Colors -->
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>

  <xacro:macro name="wheel_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>
  
  <!-- Human params -->
  <xacro:property name="human_rad" value="0.25" />
  <xacro:property name="human_height" value="1.8" />
  <xacro:property name="wheellen" value="0.1" />
  <xacro:property name="wheelrad" value="0.2" />
  <xacro:property name="xwheel" value="0.30" />
  <xacro:property name="ywheel" value="0.25" />
  <xacro:property name="zwheel" value="0.2" />
  <xacro:property name="pi" value="3.1415" />

  <!-- Body-->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 ${human_height/2 + 0.1}"/>
      <geometry>
	      <cylinder length="${human_height}" radius="${human_rad}"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 ${human_height/2}"/>
      <geometry>
	      <cylinder length="${human_height}" radius="${human_rad}"/>
      </geometry>
    </collision>
    <xacro:wheel_inertial mass="100"/>
  </link>


  <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix reflect">
  <link name="${prefix}_wheel_human">
    <visual>
      <origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
      <geometry>
	      <cylinder length="${wheellen}" radius="${wheelrad}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
      <geometry>
	      <cylinder length="${wheellen}" radius="${wheelrad}"/>
      </geometry>
    </collision>
    <xacro:wheel_inertial mass="2"/>
  </link>
  <joint name="${prefix}_wheel_joint_human" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="${prefix}_wheel_human"/>
    <origin rpy="0 0 0" xyz="${xwheel*reflect} ${ywheel} ${zwheel}"/>
  </joint>
	  
  <!-- This block provides the simulator (Gazebo) with information on a few additional
  physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
  <gazebo reference="${prefix}_wheel_human">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <min_depth value="0.02" />
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- This block connects the wheel joint to an actuator (motor), which informs both
  simulation and visualization of the robot -->
  <transmission name="${prefix}_wheel_human_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="${prefix}_wheel_human_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="${prefix}_wheel_joint_human">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  </xacro:macro>
  <xacro:wheel prefix="right" reflect="-1"/>
  <xacro:wheel prefix="left" reflect="1"/>

  <link name="caster_wheel_human">
    <visual>
      <origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
      <geometry>
	      <sphere radius="0.1"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
      <geometry>
	      <sphere radius="0.2"/>
      </geometry>
    </collision>
    <xacro:wheel_inertial mass="2"/>
  </link>

  <joint name="caster_wheel_joint_human" type="fixed">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="caster_wheel_human"/>
    <origin rpy="0 0 0" xyz="0 ${-ywheel} ${0.1}"/>
  </joint>

    <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control_human" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Camera -->

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>

    <sensor name="camera" type="camera">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <frame_name>camera_link_optical</frame_name> 
      </plugin>
    </sensor>

  </gazebo>
  


</robot>
